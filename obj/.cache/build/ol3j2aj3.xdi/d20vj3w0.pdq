<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>&#32467;&#26500;&#20307;&#31867;&#22411; </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="&#32467;&#26500;&#20307;&#31867;&#22411; ">
    <meta name="generator" content="docfx 2.56.2.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    <meta property="docfx:rel" content="../">
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div class="container body-content">
        
        <div id="search-results">
          <div class="search-list"></div>
          <div class="sr-items">
            <p><i class="glyphicon glyphicon-refresh index-loading"></i></p>
          </div>
          <ul id="pagination"></ul>
        </div>
      </div>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="">
<h1 id="结构体类型" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="1">结构体类型</h1>

<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="3">IDA内部维护着一个结构体列表，IDA中的Structures窗口可以看到结构体列表的信息。</p>
<hr sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="5">
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="7">创建结构体</p>
<pre><code class="lang-c" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="9">tid_t add_struc(uval_t idx, const char *name, bool is_union=false);
</code></pre>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="13">第一个参数，idx为结构体的索引，代表所插入的结构体在IDA存储的列表中的顺序，如果idx为-1，表示添加结构体到列表末尾。</p>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="15">第二个参数，name为结构体的名称，不能为不合法名称，也不可以与数据库已有的名称重复。</p>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="17">返回值tid_t实际上就是个整数，用于标识唯一的结构体类型。如果返回-1，代表创建结构体失败。</p>
<hr sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="19">
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="21">通过结构体的名称来索引到对应的结构体标识符:</p>
<pre><code class="lang-c++" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="23">tid_t get_struc_id(const char *name);
</code></pre>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="27">根据结构体标识符来索引到对应的结构体名称:</p>
<pre><code class="lang-c++" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="29">qstring get_struc_name(tid_t id);
</code></pre>
<hr sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="33">
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="35">设置结构体的注释和获取结构体的注释可参考如下函数</p>
<pre><code class="lang-c++" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="37">bool set_struc_cmt(tid_t id, const char *cmt, bool repeatable);
ssize_t get_struc_cmt(qstring *buf, tid_t id, bool repeatable);
</code></pre>
<hr sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="42">
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="44">通过标识符tid_t索引得到对应的结构体类型信息struc_t:</p>
<pre><code class="lang-c" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="46">struc_t* get_struc(tid_t id);
</code></pre>
<hr sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="50">
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="52">获取一个结构体的大小</p>
<pre><code class="lang-c++" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="54">asize_t 	get_struc_size (const struc_t *sptr);
asize_t 	get_struc_size (tid_t id);
</code></pre>
<hr sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="59">
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="61">给结构体添加成员</p>
<pre><code class="lang-c++" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="63">struc_error_t  add_struc_member(
        struc_t *sptr,
        const char *fieldname,
        ea_t offset,
        flags_t flag,
        const opinfo_t *mt,
        asize_t nbytes);
</code></pre>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="73">第一个参数sptr为要添加成员的结构体</p>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="75">第二个参数fieldname为要添加的成员名称</p>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="77">第三个参数offset为要添加的成员在结构体中的偏移</p>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="79">第四个参数flag为结构体的类型标记，可在bytes.hpp中找到如下定义</p>
<pre><code class="lang-c++" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="81">flags_t idaapi byte_flag(void)     { return FF_DATA|FF_BYTE; }      ///&lt; Get a flags_t representing a byte
flags_t idaapi word_flag(void)     { return FF_DATA|FF_WORD; }      ///&lt; Get a flags_t representing a word
flags_t idaapi dword_flag(void)    { return FF_DATA|FF_DWORD; }     ///&lt; Get a flags_t representing a double word
flags_t idaapi qword_flag(void)    { return FF_DATA|FF_QWORD; }     ///&lt; Get a flags_t representing a quad word
flags_t idaapi oword_flag(void)    { return FF_DATA|FF_OWORD; }     ///&lt; Get a flags_t representing a octaword
flags_t idaapi yword_flag(void)    { return FF_DATA|FF_YWORD; }     ///&lt; Get a flags_t representing a ymm word
flags_t idaapi zword_flag(void)    { return FF_DATA|FF_ZWORD; }     ///&lt; Get a flags_t representing a zmm word
flags_t idaapi tbyte_flag(void)    { return FF_DATA|FF_TBYTE; }     ///&lt; Get a flags_t representing a tbyte
flags_t idaapi strlit_flag(void)   { return FF_DATA|FF_STRLIT; }    ///&lt; Get a flags_t representing a string literal
flags_t idaapi stru_flag(void)     { return FF_DATA|FF_STRUCT; }    ///&lt; Get a flags_t representing a struct
flags_t idaapi cust_flag(void)     { return FF_DATA|FF_CUSTOM; }    ///&lt; Get a flags_t representing custom type data
flags_t idaapi align_flag(void)    { return FF_DATA|FF_ALIGN; }     ///&lt; Get a flags_t representing an alignment directive
flags_t idaapi float_flag(void)    { return FF_DATA|FF_FLOAT; }     ///&lt; Get a flags_t representing a float
flags_t idaapi double_flag(void)   { return FF_DATA|FF_DOUBLE; }    ///&lt; Get a flags_t representing a double
flags_t idaapi packreal_flag(void) { return FF_DATA|FF_PACKREAL; }  ///&lt; Get a flags_t representing a packed decimal real
</code></pre>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="99">第五个参数mt为要添加的成员类型的额外信息，只有当成员类型为结构体、偏移、枚举、字符串、结构体偏移以上一种时有效。</p>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="101">第六个参数nbytes为要添加的成员的大小，当填0的时候，该成员会表示成一个<code sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="101">变量结构体</code>（即大小不确定）。</p>
<hr sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="103">
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="105">设置结构体某个成员的名称</p>
<pre><code class="lang-c++" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="107">bool set_member_name(struc_t *sptr, ea_t offset,const char *name);
</code></pre>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="111">参数一sptr为要目标成员的结构体</p>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="113">参数二offset为目标成员所处在结构体的偏移大小</p>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="115">参数三name为目标成员要设置的名称</p>
<hr sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="117">
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="119">设置变量的类型，该函数可用于设置成员为一些基础类型(byte,word,dword...)，参数和add_struc_member差不多，故省略介绍。</p>
<pre><code class="lang-c++" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="121">bool set_member_type(struc_t *sptr, ea_t offset, flags_t flag,const opinfo_t *mt, asize_t nbytes);
</code></pre>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="127">如果要将结构体成员设置为类型库中的其它类型，可使用以下函数</p>
<pre><code class="lang-c++" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="129">smt_code_t set_member_tinfo(
        struc_t *sptr,
        member_t *mptr,
        uval_t memoff,
        const tinfo_t &amp;tif,
        int flags);
</code></pre>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="138">参数一sptr为成员所在的结构体</p>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="140">参数二mptr为目标成员</p>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="142">参数三memoff成员内部的偏移</p>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="144">参数四tif为要设置的成员类型</p>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="146">参数五flags为设置的一些参数，有如下选择</p>
<pre><code class="lang-c++" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="148">#define SET_MEMTI_MAY_DESTROY 0x0001 ///&lt; may destroy other members
#define SET_MEMTI_COMPATIBLE  0x0002 ///&lt; new type must be compatible with the old
#define SET_MEMTI_FUNCARG     0x0004 ///&lt; mptr is function argument (can not create arrays)
#define SET_MEMTI_BYTIL       0x0008 ///&lt; new type was created by the type subsystem
#define SET_MEMTI_USERTI      0x0010 ///&lt; user-specified type
</code></pre>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="158">例如我们想要创建一个结构体，结构体第一个成员是自身的指针，代码如下:</p>
<pre><code class="lang-c++" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="160">#include &lt;ida.hpp&gt;
#include &lt;idp.hpp&gt;
#include &lt;loader.hpp&gt;
#include &lt;kernwin.hpp&gt;
#include &lt;struct.hpp&gt;
#include &lt;typeinf.hpp&gt;

bool idaapi run(size_t)
{
	idati = (til_t*)get_idati();

	tid_t idStruct = add_struc(-1, &quot;TestStruct&quot;);
	struc_t* pStruct = get_struc(idStruct);

	add_struc_member(pStruct, &quot;member_0&quot;, 0, dword_flag(), NULL, 0x4);

	tinfo_t type;
	type.create_typedef(idati, &quot;TestStruct&quot;);
	type.create_ptr(type);
	set_member_tinfo(pStruct, get_member(pStruct, 0), 0, type, SET_MEMTI_MAY_DESTROY);
	return true;
}
</code></pre>
<hr sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="185">
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="187">如果要遍历一个结构体的成员，可以参考如下代码:</p>
<pre><code class="lang-c++" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="189">bool idaapi run(size_t)
{
	//要遍历的某个结构体的名称
	struc_t* pStruct = get_struc(get_struc_id(&quot;GUID&quot;));
	if (!pStruct)
	{
		return true;
	}
	for (unsigned int n = 0; n &lt; pStruct-&gt;memqty; ++n)
	{
		member_t pMember = pStruct-&gt;members[n];
		qstring qMemberName = get_member_name(pMember.id);
		msg(&quot;[Member]:%s\n&quot;, qMemberName.c_str());
	}

	return true;
}
</code></pre>
<hr sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="209">
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="211">扩充或者收缩一个结构体</p>
<pre><code class="lang-c" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="213">bool expand_struc(struc_t *sptr, ea_t offset, adiff_t delta, bool recalc=true);
</code></pre>
<h5 id="参数" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="217">参数:</h5>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="219">sptr表示需要执行操作的结构体。</p>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="221">offset表示结构体的偏移。</p>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="223">delta表示要扩充的字节大小，如果为负数则表示要移除的字节大小。</p>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="225">recalc表示是否重新计算结构体类型被使用的地方。</p>
<h5 id="返回值" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="227">返回值:</h5>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="229">返回true表示函数执行成功。</p>
<p sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="233">需要注意的是，一个空的结构体是无法执行expand_struc函数的，可以参考以下代码初始化一个结构体</p>
<pre><code class="lang-c" sourcefile="IDASDK/(struct.hpp)结构体类型.md" sourcestartlinenumber="235">//name为结构体的名称,size为结构体的大小
tid_t CreateStructure(const char* name, int size)
{
    //已存在相同名称的结构体
    tid_t structId = get_struc_id(name);
    if (structId != BADADDR)
    {
        return structId;
    }

    structId = add_struc(-1, name);
    if (structId == BADADDR)
    {
        return structId;
    }

    struc_t* pStruct = get_struc(structId);
    char fieldName[64] = { 0 };
    for (int n = 0; n &lt; size; ++n)
    {
        qsnprintf(fieldName, sizeof(fieldName), &quot;field_%a&quot;, n);
        add_struc_member(pStruct, fieldName, n, 0, NULL, 1);
    }
    
    return structId;
}
</code></pre>
</article>
          </div>
          <div class="contribution-panel mobile-hide">
              <a href="https://github.com/fjqisba/IDADoc/blob/master/IDASDK/(struct.hpp)&#32467;&#26500;&#20307;&#31867;&#22411;.md/#L1" title="Improve this Doc" class="fab btn-warning pull-right"><i class="glyphicon glyphicon-pencil"></i></a>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
